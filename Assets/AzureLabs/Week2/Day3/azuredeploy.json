{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "projectName": {
      "type": "string",
      "defaultValue": "ELK-Project",
      "metadata": {
        "description": "Specifies a name for generating resource names."
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "East US",
      "metadata": {
        "description": "Specifies the location for all Web resources."
      }
    },
    "location2": {
      "type": "string",
      "defaultValue": "East US 2",
      "metadata": {
        "description": "Specifies the location for all ELK resources."
      }
    },
    "adminUsername": {
      "type": "string",
      "defaultValue": "azureuser",
      "metadata": {
        "description": "Specifies a username for the Virtual Machine."
      }
    },
    "adminPublicKey": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Specifies the SSH rsa public key file as a string. Use \"ssh-keygen -t rsa -b 2048\" to generate your SSH key pairs."
      }
    },
    "ipAddress": {
      "type": "string",
      "defaultValue": "*",
      "metadata": {
        "description": "Your IP Address"
      }
    },
    "vnetAddressPrefix": {
      "type": "string",
      "defaultValue": "10.7.0.0/24",
      "metadata": {
        "description": "description"
      }
    },
    "vnetAddressPrefix2": {
      "type": "string",
      "defaultValue": "10.8.0.0/24",
      "metadata": {
        "description": "description"
      }
    }
  },
  "variables": {
    "availabilitySetName": "[concat(parameters('projectName'), '-avSet')]",
    "vmSize": "Standard_B1s",
    "webVmSize": "Standard_B1ms",
    "elkVmSize": "Standard_B2ms",
    "numberofInstances": 2,
    "vnetName": "[concat(parameters('projectName'), '-vnet')]",
    "vnetSubnetName": "[concat(parameters('projectName'), '-subnet')]",
    "vnetName2": "[concat(parameters('projectName'), '-vnet2')]",
    "vnetSubnetName2": "[concat(parameters('projectName'), '-subnet2')]",
    "jumpboxName": "[concat(parameters('projectName'), '-jumpboxVm')]",
    "jumpboxVip": "[concat(variables('jumpboxName'), '-ip')]",
    "elkName": "[concat(parameters('projectName'), '-elkVm')]",
    "elkVip": "[concat(variables('elkName'), '-ip')]",
    "nsgName": "[concat(parameters('projectName'), '-nsg')]",
    "nsgName2": "[concat(parameters('projectName'), '-nsg2')]",
    "lbName": "[concat(parameters('projectName'), '-lb')]",
    "lbVip": "[concat(variables('lbName'), '-ip')]",
    "lbProbeId": "[resourceId('Microsoft.Network/loadBalancers/probes', variables('lbName'), 'httpProbe')]",
    "lbBackendPoolID": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', variables('lbName'), 'loadBalancerBackend')]",
    "frontEndIPConfigID": "[resourceId('Microsoft.Network/loadBalancers/frontendIPConfigurations', variables('lbName'), 'loadBalancerFrontEnd')]",
    "publicIpId": "[resourceId('Microsoft.Network/publicIPAddresses',variables('lbVip'))]"
  },
  "resources": [
    {
      "type": "Microsoft.Compute/availabilitySets",
      "apiVersion": "2021-11-01",
      "location": "[parameters('location')]",
      "name": "[variables('availabilitySetName')]",
      "sku": {
        "name": "Aligned"
      },
      "properties": {
        "platformFaultDomainCount": 2,
        "platformUpdateDomainCount": 2
      }
    },
    {
      "type": "Microsoft.Network/networkSecurityGroups",
      "apiVersion": "2020-11-01",
      "name": "[variables('nsgName')]",
      "location": "[parameters('location')]",
      "properties": {
        "securityRules": [
          {
            "name": "allow-ssh",
            "properties": {
              "description": "Locks inbound down to ssh default port 22.",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "22",
              "sourceAddressPrefix": "[parameters('ipAddress')]",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 1000,
              "direction": "Inbound"
            }
          },
          {
            "name": "allow-http",
            "properties": {
              "description": "Allow http traffic.",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "80",
              "sourceAddressPrefix": "[parameters('ipAddress')]",
              "destinationAddressPrefix": "VirtualNetwork",
              "access": "Allow",
              "priority": 1100,
              "direction": "Inbound"
            }
          },
          {
            "name": "allow-alb-healthprobes",
            "properties": {
              "description": "Allow 168.63.129.16 to send health probes to my vNet.",
              "protocol": "Tcp",
              "sourceAddressPrefix": "AzureLoadBalancer",              
              "sourcePortRange": "*",
              "destinationAddressPrefix": "VirtualNetwork",
              "destinationPortRange": "*",
              "access": "Allow",
              "priority": 1200,
              "direction": "Inbound"
            }
          },
          {
            "name": "deny-all",
            "properties": {
              "description": "Deny Azure default rules.",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "*",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Deny",
              "priority": 4096,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
        {
      "type": "Microsoft.Network/networkSecurityGroups",
      "apiVersion": "2020-11-01",
      "name": "[variables('nsgName2')]",
      "location": "[parameters('location2')]",
      "properties": {
        "securityRules": [
          {
            "name": "allow-kibana",
            "properties": {
              "description": "Kibana.",
              "protocol": "Tcp",
              "sourceAddressPrefix": "[parameters('ipAddress')]",              
              "sourcePortRange": "5601",
              "destinationAddressPrefix": "VirtualNetwork",
              "destinationPortRange": "*",
              "access": "Allow",
              "priority": 1200,
              "direction": "Inbound"
            }
          },
          {
            "name": "deny-all",
            "properties": {
              "description": "Deny Azure default rules.",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "*",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Deny",
              "priority": 4096,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "apiVersion": "2020-11-01",
      "name": "[variables('jumpboxVip')]",
      "location": "[parameters('location')]",
      "properties": {
        "publicIPAllocationMethod": "Dynamic"
      },
      "sku": {
        "name": "Basic"
      }
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "apiVersion": "2020-11-01",
      "name": "[variables('elkVip')]",
      "location": "[parameters('location2')]",
      "properties": {
        "publicIPAllocationMethod": "Dynamic"
      },
      "sku": {
        "name": "Basic"
      }
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "apiVersion": "2020-11-01",
      "name": "[variables('lbVip')]",
      "location": "[parameters('location')]",
      "properties": {
        "publicIPAllocationMethod": "Dynamic"
      },
      "sku": {
        "name": "Basic"
      }
    },
    {
      "type": "Microsoft.Network/virtualNetworks",
      "apiVersion": "2020-11-01",
      "name": "[variables('vnetName')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsgName'))]"
      ],
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[parameters('vnetAddressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('vnetSubnetName')]",
            "properties": {
              "addressPrefix": "[parameters('vnetAddressPrefix')]",
              "networkSecurityGroup": {
                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsgName'))]"
              }
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/virtualNetworks",
      "apiVersion": "2020-11-01",
      "name": "[variables('vnetName2')]",
      "location": "[parameters('location2')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsgName2'))]"
      ],
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[parameters('vnetAddressPrefix2')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('vnetSubnetName2')]",
            "properties": {
              "addressPrefix": "[parameters('vnetAddressPrefix2')]",
              "networkSecurityGroup": {
                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsgName2'))]"
              }
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "2020-11-01",
      "name": "[concat(parameters('projectName'), '-web',copyindex(1))]",
      "copy": {
          "name": "netIntLoop",
          "count": "[variables('numberOfInstances')]"
      },
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', variables('vnetName'))]",
        "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsgName'))]",
        "[resourceId('Microsoft.Network/loadBalancers', variables('lbName'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vnetName'), variables('vnetSubnetName'))]"
              },
              "loadBalancerBackendAddressPools": [
                {
                  "id": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools/', variables('lbName'), 'loadBalancerBackEnd')]"
                }
              ]
            }
          }
        ]
      }

    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "2020-11-01",
      "name": "[concat(variables('jumpboxName'), '-vm', '-nic')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/publicIPAddresses', variables('jumpboxVip'))]",
        "[resourceId('Microsoft.Network/virtualNetworks', variables('vnetName'))]",
        "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsgName'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('jumpboxVip'))]"
              },
              "subnet": {
                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vnetName'), variables('vnetSubnetName'))]"
              }
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "2020-11-01",
      "name": "[concat(variables('elkName'), '-vm', '-nic')]",
      "location": "[parameters('location2')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/publicIPAddresses', variables('elkVip'))]",
        "[resourceId('Microsoft.Network/virtualNetworks', variables('vnetName2'))]",
        "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsgName2'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('elkVip'))]"
              },
              "subnet": {
                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vnetName2'), variables('vnetSubnetName2'))]"
              }
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "2021-11-01",
      "name": "[variables('jumpboxName')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('jumpboxName'), '-vm', '-nic'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('vmSize')]"
        },
        "osProfile": {
          "computerName": "[variables('jumpboxName')]",
          "adminUsername": "[parameters('adminUsername')]",
          "linuxConfiguration": {
            "disablePasswordAuthentication": true,
            "ssh": {
              "publicKeys": [
                {
                  "path": "[concat('/home/', parameters('adminUsername'), '/.ssh/authorized_keys')]",
                  "keyData": "[parameters('adminPublicKey')]"
                }
              ]
            }
          }
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "Canonical",
            "offer": "UbuntuServer",
            "sku": "18_04-lts-gen2",
            "version": "latest"
          },
          "osDisk": {
            "createOption": "fromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('jumpboxName'), '-vm', '-nic'))]"
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "2021-11-01",
      "name": "[variables('elkName')]",
      "location": "[parameters('location2')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('elkName'), '-vm', '-nic'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('elkVmSize')]"
        },
        "osProfile": {
          "computerName": "[variables('elkName')]",
          "adminUsername": "[parameters('adminUsername')]",
          "linuxConfiguration": {
            "disablePasswordAuthentication": true,
            "ssh": {
              "publicKeys": [
                {
                  "path": "[concat('/home/', parameters('adminUsername'), '/.ssh/authorized_keys')]",
                  "keyData": "[parameters('adminPublicKey')]"
                }
              ]
            }
          }
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "Canonical",
            "offer": "UbuntuServer",
            "sku": "18_04-lts-gen2",
            "version": "latest"
          },
          "osDisk": {
            "createOption": "fromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('elkName'), '-vm', '-nic'))]"
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "2021-11-01",
            "name": "[concat(parameters('projectName'), '-web', copyIndex(1))]",
            "copy": {
                "name": "virtualMachineLoop",
                "count": "[variables('numberOfInstances')]"
            },
      "location": "[parameters('location')]",
      "dependsOn": [
          "[resourceId('Microsoft.Network/networkInterfaces', concat(parameters('projectName'), '-web',copyindex(1)))]",
          "[resourceId('Microsoft.Compute/availabilitySets', variables('availabilitySetName'))]",
          "netIntLoop"
      ],
      "properties": {
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets', variables('availabilitySetName'))]"
        },
        "hardwareProfile": {
          "vmSize": "[variables('webVmSize')]"
        },
        "osProfile": {
          "computerName": "[concat(parameters('projectName'), '-web', copyindex(1))]",
          "adminUsername": "[parameters('adminUsername')]",
          "linuxConfiguration": {
            "disablePasswordAuthentication": true,
            "ssh": {
              "publicKeys": [
                {
                  "path": "[concat('/home/', parameters('adminUsername'), '/.ssh/authorized_keys')]",
                  "keyData": "[parameters('adminPublicKey')]"
                }
              ]
            }
          }
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "Canonical",
            "offer": "UbuntuServer",
            "sku": "18_04-lts-gen2",
            "version": "latest"
          },
          "osDisk": {
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
                "id": "[resourceId('Microsoft.Network/networkInterfaces',concat(parameters('projectName'), '-web', copyindex(1)))]"
            }
          ]
        }
      }
    },

    {
      "type": "Microsoft.Network/loadBalancers",
      "apiVersion": "2020-11-01",
      "location": "[parameters('location')]",
      "name": "[variables('lbName')]",
      "sku": {
        "name": "Basic"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/publicIPAddresses', variables('lbVip'))]"
      ],
      "properties": {
        "backendAddressPools": [
          {
            "name": "loadBalancerBackEnd"
          }
        ],
        "frontendIPConfigurations": [
          {
            "name": "loadBalancerFrontEnd",
            "properties": {
              "publicIPAddress": {
                "id": "[variables('publicIpId')]"
              }
            }
          }
        ],
        "loadBalancingRules": [
          {
            "name": "[concat(variables('lbName'), '-rule1')]",
            "properties": {
              "backendAddressPool": {
                "id": "[variables('lbBackendPoolID')]"
              },
              "backendPort": 80,
              "frontendIPConfiguration": {
                "id": "[variables('frontEndIPConfigID')]"
              },
              "frontendPort": 80,
              "protocol": "Tcp",
              "probe": {
                "id": "[variables('lbProbeId')]"
              }
            }
          }
        ],
        "probes": [
          {
            "name": "httpProbe",
            "properties": {
              "numberOfProbes": 2,
              "port": 80,
              "protocol": "Tcp"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
      "apiVersion": "2020-11-01",
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', variables('vnetName'))]",
        "[resourceId('Microsoft.Network/virtualNetworks', variables('vnetName2'))]"
      ],
      "name": "[format('{0}/{1}', variables('vnetName'), format('{0}-{1}', variables('vnetName'), variables('vnetName2')))]",
      "properties": {
        "allowForwardedTraffic": false,
        "allowGatewayTransit": false,
        "allowVirtualNetworkAccess": true,
        "useRemoteGateways": false,
        "remoteVirtualNetwork": {
          "id": "[resourceId('Microsoft.Network/virtualNetworks',variables('vnetName2'))]"
        }
      }
    },
    {
      "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
      "apiVersion": "2020-11-01",
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', variables('vnetName'))]",
        "[resourceId('Microsoft.Network/virtualNetworks', variables('vnetName2'))]"
      ],
      "name": "[format('{0}/{1}', variables('vnetName2'), format('{0}-{1}', variables('vnetName2'), variables('vnetName')))]",
      "properties": {
        "allowForwardedTraffic": false,
        "allowGatewayTransit": false,
        "allowVirtualNetworkAccess": true,
        "useRemoteGateways": false,
        "remoteVirtualNetwork": {
          "id": "[resourceId('Microsoft.Network/virtualNetworks',variables('vnetName'))]"
        }
      }
    }
  ]
}