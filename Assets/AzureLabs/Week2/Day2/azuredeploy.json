{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "extensions_enablevmaccess_username": {
            "type": "SecureString"
        },
        "extensions_enablevmaccess_password": {
            "type": "SecureString"
        },
        "extensions_enablevmaccess_ssh_key": {
            "type": "SecureString"
        },
        "extensions_enablevmaccess_reset_ssh": {
            "type": "SecureString"
        },
        "extensions_enablevmaccess_remove_user": {
            "type": "SecureString"
        },
        "extensions_enablevmaccess_expiration": {
            "type": "SecureString"
        },
        "extensions_enablevmaccess_username_1": {
            "type": "SecureString"
        },
        "extensions_enablevmaccess_password_1": {
            "type": "SecureString"
        },
        "extensions_enablevmaccess_ssh_key_1": {
            "type": "SecureString"
        },
        "extensions_enablevmaccess_reset_ssh_1": {
            "type": "SecureString"
        },
        "extensions_enablevmaccess_remove_user_1": {
            "type": "SecureString"
        },
        "extensions_enablevmaccess_expiration_1": {
            "type": "SecureString"
        },
        "virtualMachines_elk_name": {
            "defaultValue": "elk",
            "type": "String"
        },
        "virtualMachines_web1_name": {
            "defaultValue": "web1",
            "type": "String"
        },
        "virtualMachines_web2_name": {
            "defaultValue": "web2",
            "type": "String"
        },
        "loadBalancers_publicLB_name": {
            "defaultValue": "publicLB",
            "type": "String"
        },
        "availabilitySets_web_as_name": {
            "defaultValue": "web-as",
            "type": "String"
        },
        "publicIPAddresses_lb_IP_name": {
            "defaultValue": "lb-IP",
            "type": "String"
        },
        "networkInterfaces_elk895_name": {
            "defaultValue": "elk895",
            "type": "String"
        },
        "publicIPAddresses_elk_ip_name": {
            "defaultValue": "elk-ip",
            "type": "String"
        },
        "networkInterfaces_web1860_name": {
            "defaultValue": "web1860",
            "type": "String"
        },
        "networkInterfaces_web2243_name": {
            "defaultValue": "web2243",
            "type": "String"
        },
        "virtualNetworks_vNet1_elk_name": {
            "defaultValue": "vNet1-elk",
            "type": "String"
        },
        "virtualNetworks_Day4_Rg_vnet_name": {
            "defaultValue": "Day4-Rg-vnet",
            "type": "String"
        },
        "networkSecurityGroups_Day4_nsg_name": {
            "defaultValue": "Day4-nsg",
            "type": "String"
        },
        "virtualMachines_jumpbox_ansible_name": {
            "defaultValue": "jumpbox-ansible",
            "type": "String"
        },
        "networkSecurityGroups_elk_vNet_nsg_name": {
            "defaultValue": "elk-vNet-nsg",
            "type": "String"
        },
        "networkInterfaces_jumpbox_ansible611_name": {
            "defaultValue": "jumpbox-ansible611",
            "type": "String"
        },
        "publicIPAddresses_jumpbox_ansible_ip_name": {
            "defaultValue": "jumpbox-ansible-ip",
            "type": "String"
        },
        "virtualNetworks_ELK_VNET_externalid": {
            "defaultValue": "/subscriptions/e30f7b1d-81e9-475a-a650-2496d8209206/resourceGroups/Day4-Rg/providers/Microsoft.Network/virtualNetworks/ELK-VNET",
            "type": "String"
        }
    },
    "variables": {},
    "resources": [
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2020-11-01",
            "name": "[parameters('networkSecurityGroups_Day4_nsg_name')]",
            "location": "eastus",
            "properties": {
                "securityRules": [
                    {
                        "name": "default-allow-ssh",
                        "properties": {
                            "protocol": "TCP",
                            "sourcePortRange": "*",
                            "destinationPortRange": "22",
                            "sourceAddressPrefix": "71.150.147.86",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 1001,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "Allow-http",
                        "properties": {
                            "protocol": "TCP",
                            "sourcePortRange": "*",
                            "destinationPortRange": "80",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 1011,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2020-11-01",
            "name": "[parameters('networkSecurityGroups_elk_vNet_nsg_name')]",
            "location": "southcentralus",
            "properties": {
                "securityRules": [
                    {
                        "name": "Allow-kibana",
                        "properties": {
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "5601",
                            "sourceAddressPrefix": "71.150.147.86",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 1020,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "default-allow-ssh",
                        "properties": {
                            "protocol": "TCP",
                            "sourcePortRange": "*",
                            "destinationPortRange": "22",
                            "sourceAddressPrefix": "71.150.147.86",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 1001,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2020-11-01",
            "name": "[parameters('publicIPAddresses_elk_ip_name')]",
            "location": "southcentralus",
            "sku": {
                "name": "Basic",
                "tier": "Regional"
            },
            "properties": {
                "ipAddress": "20.97.16.156",
                "publicIPAddressVersion": "IPv4",
                "publicIPAllocationMethod": "Dynamic",
                "idleTimeoutInMinutes": 4,
                "ipTags": []
            }
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2020-11-01",
            "name": "[parameters('publicIPAddresses_jumpbox_ansible_ip_name')]",
            "location": "eastus",
            "sku": {
                "name": "Basic",
                "tier": "Regional"
            },
            "properties": {
                "ipAddress": "20.127.108.20",
                "publicIPAddressVersion": "IPv4",
                "publicIPAllocationMethod": "Dynamic",
                "idleTimeoutInMinutes": 4,
                "ipTags": []
            }
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2020-11-01",
            "name": "[parameters('publicIPAddresses_lb_IP_name')]",
            "location": "eastus",
            "sku": {
                "name": "Standard",
                "tier": "Regional"
            },
            "zones": [
                "1",
                "3",
                "2"
            ],
            "properties": {
                "ipAddress": "20.102.16.98",
                "publicIPAddressVersion": "IPv4",
                "publicIPAllocationMethod": "Static",
                "idleTimeoutInMinutes": 4,
                "ipTags": []
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2021-11-01",
            "name": "[parameters('virtualMachines_elk_name')]",
            "location": "southcentralus",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaces_elk895_name'))]"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "Standard_B2ms"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "canonical",
                        "offer": "0001-com-ubuntu-server-focal",
                        "sku": "20_04-lts-gen2",
                        "version": "latest"
                    },
                    "osDisk": {
                        "osType": "Linux",
                        "name": "[concat(parameters('virtualMachines_elk_name'), '_OsDisk_1_e862d270b2dd40f4804ec90bc3f15f2b')]",
                        "createOption": "FromImage",
                        "caching": "ReadWrite",
                        "managedDisk": {
                            "storageAccountType": "Standard_LRS",
                            "id": "[resourceId('Microsoft.Compute/disks', concat(parameters('virtualMachines_elk_name'), '_OsDisk_1_e862d270b2dd40f4804ec90bc3f15f2b'))]"
                        },
                        "deleteOption": "Delete",
                        "diskSizeGB": 30
                    },
                    "dataDisks": []
                },
                "osProfile": {
                    "computerName": "[parameters('virtualMachines_elk_name')]",
                    "adminUsername": "azureuser",
                    "linuxConfiguration": {
                        "disablePasswordAuthentication": true,
                        "ssh": {
                            "publicKeys": [
                                {
                                    "path": "/home/azureuser/.ssh/authorized_keys",
                                    "keyData": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQDlH73CmOmb152gzYE+tVUiwwAjPuDPDHqPb+USYUXr+7YccDu7oACGksctL759+OIAfxoOcWiKBttNIg5bhUPfuw3di5lmWggPZHTqFjaDkPrYkFwlL3C9pdBIS9ImHzVaGhPDTBGyQ2NBTZIOvZ1KLRBb5ZYei/0GbCMgQNntvk+64kyLJ4Mnf2Tg+VaZ6fKD76iW10dB90L++MhjhyRWWps7v0q2HM5VhOqPcdNRVtJvuolf0JurIsNRpsSjLCPGs35xYIu8MUapXwarsxLvugrOhQD785fV2cScHYMN1KnCkzBNlk/Yq3Rs1LvnUHMhMtf/Hu4WdRMfKvwYek3GJuc1McOQ+kS1E0XpQeuvrvGPNI0jhlvIi5xev4pMKiTu8A2jYXLTGcEcm/hA9BhWGDU6T95wHDO28833VtRQaB6X2smMeMlxomV9iCHtqRIHg1Lq9JoBUptfS4g3aB3pLEWvsvQ3g/iO+81Ol4hGaTidquWZp3QFeImlsjmnImE= azureuser@jumpbox-ansible"
                                }
                            ]
                        },
                        "provisionVMAgent": true,
                        "patchSettings": {
                            "patchMode": "ImageDefault",
                            "assessmentMode": "ImageDefault"
                        }
                    },
                    "secrets": [],
                    "allowExtensionOperations": true,
                    "requireGuestProvisionSignal": true
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaces_elk895_name'))]",
                            "properties": {
                                "deleteOption": "Detach"
                            }
                        }
                    ]
                },
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": true
                    }
                }
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2021-11-01",
            "name": "[parameters('virtualMachines_jumpbox_ansible_name')]",
            "location": "eastus",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaces_jumpbox_ansible611_name'))]"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "Standard_B1s"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "canonical",
                        "offer": "0001-com-ubuntu-server-focal",
                        "sku": "20_04-lts-gen2",
                        "version": "latest"
                    },
                    "osDisk": {
                        "osType": "Linux",
                        "name": "[concat(parameters('virtualMachines_jumpbox_ansible_name'), '_OsDisk_1_1edb73750c7e478cb54da50b029e5a48')]",
                        "createOption": "FromImage",
                        "caching": "ReadWrite",
                        "managedDisk": {
                            "storageAccountType": "Standard_LRS",
                            "id": "[resourceId('Microsoft.Compute/disks', concat(parameters('virtualMachines_jumpbox_ansible_name'), '_OsDisk_1_1edb73750c7e478cb54da50b029e5a48'))]"
                        },
                        "deleteOption": "Delete",
                        "diskSizeGB": 30
                    },
                    "dataDisks": []
                },
                "osProfile": {
                    "computerName": "[parameters('virtualMachines_jumpbox_ansible_name')]",
                    "adminUsername": "azureuser",
                    "linuxConfiguration": {
                        "disablePasswordAuthentication": true,
                        "ssh": {
                            "publicKeys": [
                                {
                                    "path": "/home/azureuser/.ssh/authorized_keys",
                                    "keyData": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQDHLlBBCFFE7iCHQ/aemf0EWOlm8boosSZ4lbgUra1CkiSsnSb89gERpMb+anEyCvE4CS/4Mc2LK1c2pcFCsSaDaBM9IByZ0x7YxGPqArKEyGL0D458x0t/en0WZ32cgBqfgdlIDZYjRMvOXVkaPv/7QSfOu/Zmb+vebHgka6WvK9BLrfZFj3Ftbv7hwq4U75MUgPzTMoK6Xw77pize8eHaM5iHPuS4VANkMHBnastQs8yvotw4EATJO3y6I4+8TSShjZeanaTG5+MdxGGsKOqCrJGE/3fnnW0ef+yntaBRg08lwfqItsiNAlz8FuFssqjNo+WUpjKPrSDnYQskSbw3lwnpwANutEmIywmpDDxY6GsmWutKtkXmYQWYV4J8bcp6bQDf+mRz7qt6poiBDriBcj6aEyRnM04gAIdmFs8ralSDxNRVpUURhRje17O5ALuXzkYVcUS9gtRx8Vei6rWR/HfPNWYRMv80VK0H+kIKO1jV3t5bJ2Hi3GgcKDVGiDE= northamerica\\thordraper@DESKTOP-UMMKR56"
                                }
                            ]
                        },
                        "provisionVMAgent": true,
                        "patchSettings": {
                            "patchMode": "ImageDefault",
                            "assessmentMode": "ImageDefault"
                        }
                    },
                    "secrets": [],
                    "allowExtensionOperations": true,
                    "requireGuestProvisionSignal": true
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaces_jumpbox_ansible611_name'))]",
                            "properties": {
                                "deleteOption": "Detach"
                            }
                        }
                    ]
                },
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": true
                    }
                }
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "apiVersion": "2021-11-01",
            "name": "[concat(parameters('virtualMachines_web1_name'), '/enablevmaccess')]",
            "location": "eastus",
            "dependsOn": [
                "[resourceId('Microsoft.Compute/virtualMachines', parameters('virtualMachines_web1_name'))]"
            ],
            "properties": {
                "autoUpgradeMinorVersion": true,
                "publisher": "Microsoft.OSTCExtensions",
                "type": "VMAccessForLinux",
                "typeHandlerVersion": "1.4",
                "settings": {},
                "protectedSettings": {
                    "username": "[parameters('extensions_enablevmaccess_username')]",
                    "password": "[parameters('extensions_enablevmaccess_password')]",
                    "ssh_key": "[parameters('extensions_enablevmaccess_ssh_key')]",
                    "reset_ssh": "[parameters('extensions_enablevmaccess_reset_ssh')]",
                    "remove_user": "[parameters('extensions_enablevmaccess_remove_user')]",
                    "expiration": "[parameters('extensions_enablevmaccess_expiration')]"
                }
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "apiVersion": "2021-11-01",
            "name": "[concat(parameters('virtualMachines_web2_name'), '/enablevmaccess')]",
            "location": "eastus",
            "dependsOn": [
                "[resourceId('Microsoft.Compute/virtualMachines', parameters('virtualMachines_web2_name'))]"
            ],
            "properties": {
                "autoUpgradeMinorVersion": true,
                "publisher": "Microsoft.OSTCExtensions",
                "type": "VMAccessForLinux",
                "typeHandlerVersion": "1.4",
                "settings": {},
                "protectedSettings": {
                    "username": "[parameters('extensions_enablevmaccess_username_1')]",
                    "password": "[parameters('extensions_enablevmaccess_password_1')]",
                    "ssh_key": "[parameters('extensions_enablevmaccess_ssh_key_1')]",
                    "reset_ssh": "[parameters('extensions_enablevmaccess_reset_ssh_1')]",
                    "remove_user": "[parameters('extensions_enablevmaccess_remove_user_1')]",
                    "expiration": "[parameters('extensions_enablevmaccess_expiration_1')]"
                }
            }
        },
        {
            "type": "Microsoft.Network/loadBalancers/backendAddressPools",
            "apiVersion": "2020-11-01",
            "name": "[concat(parameters('loadBalancers_publicLB_name'), '/backendPool')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancers_publicLB_name'))]"
            ],
            "properties": {
                "loadBalancerBackendAddresses": [
                    {
                        "name": "Day4-Rg_web2243ipconfig1",
                        "properties": {}
                    },
                    {
                        "name": "Day4-Rg_web1860ipconfig1",
                        "properties": {}
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups/securityRules",
            "apiVersion": "2020-11-01",
            "name": "[concat(parameters('networkSecurityGroups_Day4_nsg_name'), '/Allow-http')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_Day4_nsg_name'))]"
            ],
            "properties": {
                "protocol": "TCP",
                "sourcePortRange": "*",
                "destinationPortRange": "80",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 1011,
                "direction": "Inbound",
                "sourcePortRanges": [],
                "destinationPortRanges": [],
                "sourceAddressPrefixes": [],
                "destinationAddressPrefixes": []
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups/securityRules",
            "apiVersion": "2020-11-01",
            "name": "[concat(parameters('networkSecurityGroups_elk_vNet_nsg_name'), '/Allow-kibana')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_elk_vNet_nsg_name'))]"
            ],
            "properties": {
                "protocol": "*",
                "sourcePortRange": "*",
                "destinationPortRange": "5601",
                "sourceAddressPrefix": "71.150.147.86",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 1020,
                "direction": "Inbound",
                "sourcePortRanges": [],
                "destinationPortRanges": [],
                "sourceAddressPrefixes": [],
                "destinationAddressPrefixes": []
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups/securityRules",
            "apiVersion": "2020-11-01",
            "name": "[concat(parameters('networkSecurityGroups_Day4_nsg_name'), '/default-allow-ssh')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_Day4_nsg_name'))]"
            ],
            "properties": {
                "protocol": "TCP",
                "sourcePortRange": "*",
                "destinationPortRange": "22",
                "sourceAddressPrefix": "71.150.147.86",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 1001,
                "direction": "Inbound",
                "sourcePortRanges": [],
                "destinationPortRanges": [],
                "sourceAddressPrefixes": [],
                "destinationAddressPrefixes": []
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups/securityRules",
            "apiVersion": "2020-11-01",
            "name": "[concat(parameters('networkSecurityGroups_elk_vNet_nsg_name'), '/default-allow-ssh')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_elk_vNet_nsg_name'))]"
            ],
            "properties": {
                "protocol": "TCP",
                "sourcePortRange": "*",
                "destinationPortRange": "22",
                "sourceAddressPrefix": "71.150.147.86",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 1001,
                "direction": "Inbound",
                "sourcePortRanges": [],
                "destinationPortRanges": [],
                "sourceAddressPrefixes": [],
                "destinationAddressPrefixes": []
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2020-11-01",
            "name": "[parameters('virtualNetworks_Day4_Rg_vnet_name')]",
            "location": "eastus",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_vNet1_elk_name'))]"
            ],
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "10.1.0.0/16"
                    ]
                },
                "subnets": [
                    {
                        "name": "default",
                        "properties": {
                            "addressPrefix": "10.1.0.0/24",
                            "delegations": [],
                            "privateEndpointNetworkPolicies": "Enabled",
                            "privateLinkServiceNetworkPolicies": "Enabled"
                        }
                    }
                ],
                "virtualNetworkPeerings": [
                    {
                        "name": "link1",
                        "properties": {
                            "peeringState": "Disconnected",
                            "remoteVirtualNetwork": {
                                "id": "[parameters('virtualNetworks_ELK_VNET_externalid')]"
                            },
                            "allowVirtualNetworkAccess": true,
                            "allowForwardedTraffic": true,
                            "allowGatewayTransit": false,
                            "useRemoteGateways": false,
                            "remoteAddressSpace": {
                                "addressPrefixes": [
                                    "10.2.0.0/16"
                                ]
                            }
                        }
                    },
                    {
                        "name": "web-elk",
                        "properties": {
                            "peeringState": "Connected",
                            "remoteVirtualNetwork": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_vNet1_elk_name'))]"
                            },
                            "allowVirtualNetworkAccess": true,
                            "allowForwardedTraffic": true,
                            "allowGatewayTransit": false,
                            "useRemoteGateways": false,
                            "remoteAddressSpace": {
                                "addressPrefixes": [
                                    "10.3.0.0/16"
                                ]
                            }
                        }
                    }
                ],
                "enableDdosProtection": false
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2020-11-01",
            "name": "[parameters('virtualNetworks_vNet1_elk_name')]",
            "location": "southcentralus",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_Day4_Rg_vnet_name'))]"
            ],
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "10.3.0.0/16"
                    ]
                },
                "subnets": [
                    {
                        "name": "default",
                        "properties": {
                            "addressPrefix": "10.3.0.0/24",
                            "delegations": [],
                            "privateEndpointNetworkPolicies": "Enabled",
                            "privateLinkServiceNetworkPolicies": "Enabled"
                        }
                    }
                ],
                "virtualNetworkPeerings": [
                    {
                        "name": "elk-web",
                        "properties": {
                            "peeringState": "Connected",
                            "remoteVirtualNetwork": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_Day4_Rg_vnet_name'))]"
                            },
                            "allowVirtualNetworkAccess": true,
                            "allowForwardedTraffic": true,
                            "allowGatewayTransit": false,
                            "useRemoteGateways": false,
                            "remoteAddressSpace": {
                                "addressPrefixes": [
                                    "10.1.0.0/16"
                                ]
                            }
                        }
                    }
                ],
                "enableDdosProtection": false
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/subnets",
            "apiVersion": "2020-11-01",
            "name": "[concat(parameters('virtualNetworks_Day4_Rg_vnet_name'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_Day4_Rg_vnet_name'))]"
            ],
            "properties": {
                "addressPrefix": "10.1.0.0/24",
                "delegations": [],
                "privateEndpointNetworkPolicies": "Enabled",
                "privateLinkServiceNetworkPolicies": "Enabled"
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/subnets",
            "apiVersion": "2020-11-01",
            "name": "[concat(parameters('virtualNetworks_vNet1_elk_name'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_vNet1_elk_name'))]"
            ],
            "properties": {
                "addressPrefix": "10.3.0.0/24",
                "delegations": [],
                "privateEndpointNetworkPolicies": "Enabled",
                "privateLinkServiceNetworkPolicies": "Enabled"
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
            "apiVersion": "2020-11-01",
            "name": "[concat(parameters('virtualNetworks_Day4_Rg_vnet_name'), '/link1')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_Day4_Rg_vnet_name'))]"
            ],
            "properties": {
                "peeringState": "Disconnected",
                "remoteVirtualNetwork": {
                    "id": "[parameters('virtualNetworks_ELK_VNET_externalid')]"
                },
                "allowVirtualNetworkAccess": true,
                "allowForwardedTraffic": true,
                "allowGatewayTransit": false,
                "useRemoteGateways": false,
                "remoteAddressSpace": {
                    "addressPrefixes": [
                        "10.2.0.0/16"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Compute/availabilitySets",
            "apiVersion": "2021-11-01",
            "name": "[parameters('availabilitySets_web_as_name')]",
            "location": "eastus",
            "dependsOn": [
                "[resourceId('Microsoft.Compute/virtualMachines', parameters('virtualMachines_web1_name'))]",
                "[resourceId('Microsoft.Compute/virtualMachines', parameters('virtualMachines_web2_name'))]"
            ],
            "sku": {
                "name": "Aligned"
            },
            "properties": {
                "platformUpdateDomainCount": 5,
                "platformFaultDomainCount": 2,
                "virtualMachines": [
                    {
                        "id": "[resourceId('Microsoft.Compute/virtualMachines', parameters('virtualMachines_web1_name'))]"
                    },
                    {
                        "id": "[resourceId('Microsoft.Compute/virtualMachines', parameters('virtualMachines_web2_name'))]"
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2021-11-01",
            "name": "[parameters('virtualMachines_web1_name')]",
            "location": "eastus",
            "dependsOn": [
                "[resourceId('Microsoft.Compute/availabilitySets', parameters('availabilitySets_web_as_name'))]",
                "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaces_web1860_name'))]"
            ],
            "properties": {
                "availabilitySet": {
                    "id": "[resourceId('Microsoft.Compute/availabilitySets', parameters('availabilitySets_web_as_name'))]"
                },
                "hardwareProfile": {
                    "vmSize": "Standard_B1ms"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "canonical",
                        "offer": "0001-com-ubuntu-server-focal",
                        "sku": "20_04-lts-gen2",
                        "version": "latest"
                    },
                    "osDisk": {
                        "osType": "Linux",
                        "name": "[concat(parameters('virtualMachines_web1_name'), '_OsDisk_1_e7a4b20520df4b4ebda5fea803757d36')]",
                        "createOption": "FromImage",
                        "caching": "ReadWrite",
                        "managedDisk": {
                            "storageAccountType": "Standard_LRS",
                            "id": "[resourceId('Microsoft.Compute/disks', concat(parameters('virtualMachines_web1_name'), '_OsDisk_1_e7a4b20520df4b4ebda5fea803757d36'))]"
                        },
                        "deleteOption": "Delete",
                        "diskSizeGB": 30
                    },
                    "dataDisks": []
                },
                "osProfile": {
                    "computerName": "[parameters('virtualMachines_web1_name')]",
                    "adminUsername": "azureuser",
                    "linuxConfiguration": {
                        "disablePasswordAuthentication": true,
                        "ssh": {
                            "publicKeys": [
                                {
                                    "path": "/home/azureuser/.ssh/authorized_keys",
                                    "keyData": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQDHLlBBCFFE7iCHQ/aemf0EWOlm8boosSZ4lbgUra1CkiSsnSb89gERpMb+anEyCvE4CS/4Mc2LK1c2pcFCsSaDaBM9IByZ0x7YxGPqArKEyGL0D458x0t/en0WZ32cgBqfgdlIDZYjRMvOXVkaPv/7QSfOu/Zmb+vebHgka6WvK9BLrfZFj3Ftbv7hwq4U75MUgPzTMoK6Xw77pize8eHaM5iHPuS4VANkMHBnastQs8yvotw4EATJO3y6I4+8TSShjZeanaTG5+MdxGGsKOqCrJGE/3fnnW0ef+yntaBRg08lwfqItsiNAlz8FuFssqjNo+WUpjKPrSDnYQskSbw3lwnpwANutEmIywmpDDxY6GsmWutKtkXmYQWYV4J8bcp6bQDf+mRz7qt6poiBDriBcj6aEyRnM04gAIdmFs8ralSDxNRVpUURhRje17O5ALuXzkYVcUS9gtRx8Vei6rWR/HfPNWYRMv80VK0H+kIKO1jV3t5bJ2Hi3GgcKDVGiDE= northamerica\\thordraper@DESKTOP-UMMKR56"
                                }
                            ]
                        },
                        "provisionVMAgent": true,
                        "patchSettings": {
                            "patchMode": "ImageDefault",
                            "assessmentMode": "ImageDefault"
                        }
                    },
                    "secrets": [],
                    "allowExtensionOperations": true,
                    "requireGuestProvisionSignal": true
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaces_web1860_name'))]",
                            "properties": {
                                "deleteOption": "Detach"
                            }
                        }
                    ]
                },
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": true
                    }
                }
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2021-11-01",
            "name": "[parameters('virtualMachines_web2_name')]",
            "location": "eastus",
            "dependsOn": [
                "[resourceId('Microsoft.Compute/availabilitySets', parameters('availabilitySets_web_as_name'))]",
                "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaces_web2243_name'))]"
            ],
            "properties": {
                "availabilitySet": {
                    "id": "[resourceId('Microsoft.Compute/availabilitySets', parameters('availabilitySets_web_as_name'))]"
                },
                "hardwareProfile": {
                    "vmSize": "Standard_B1ms"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "canonical",
                        "offer": "0001-com-ubuntu-server-focal",
                        "sku": "20_04-lts-gen2",
                        "version": "latest"
                    },
                    "osDisk": {
                        "osType": "Linux",
                        "name": "[concat(parameters('virtualMachines_web2_name'), '_OsDisk_1_9582d89bee3a4a94942c602e83b6c994')]",
                        "createOption": "FromImage",
                        "caching": "ReadWrite",
                        "managedDisk": {
                            "storageAccountType": "Standard_LRS",
                            "id": "[resourceId('Microsoft.Compute/disks', concat(parameters('virtualMachines_web2_name'), '_OsDisk_1_9582d89bee3a4a94942c602e83b6c994'))]"
                        },
                        "deleteOption": "Delete",
                        "diskSizeGB": 30
                    },
                    "dataDisks": []
                },
                "osProfile": {
                    "computerName": "[parameters('virtualMachines_web2_name')]",
                    "adminUsername": "azureuser",
                    "linuxConfiguration": {
                        "disablePasswordAuthentication": true,
                        "ssh": {
                            "publicKeys": [
                                {
                                    "path": "/home/azureuser/.ssh/authorized_keys",
                                    "keyData": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQDHLlBBCFFE7iCHQ/aemf0EWOlm8boosSZ4lbgUra1CkiSsnSb89gERpMb+anEyCvE4CS/4Mc2LK1c2pcFCsSaDaBM9IByZ0x7YxGPqArKEyGL0D458x0t/en0WZ32cgBqfgdlIDZYjRMvOXVkaPv/7QSfOu/Zmb+vebHgka6WvK9BLrfZFj3Ftbv7hwq4U75MUgPzTMoK6Xw77pize8eHaM5iHPuS4VANkMHBnastQs8yvotw4EATJO3y6I4+8TSShjZeanaTG5+MdxGGsKOqCrJGE/3fnnW0ef+yntaBRg08lwfqItsiNAlz8FuFssqjNo+WUpjKPrSDnYQskSbw3lwnpwANutEmIywmpDDxY6GsmWutKtkXmYQWYV4J8bcp6bQDf+mRz7qt6poiBDriBcj6aEyRnM04gAIdmFs8ralSDxNRVpUURhRje17O5ALuXzkYVcUS9gtRx8Vei6rWR/HfPNWYRMv80VK0H+kIKO1jV3t5bJ2Hi3GgcKDVGiDE= northamerica\\thordraper@DESKTOP-UMMKR56"
                                }
                            ]
                        },
                        "provisionVMAgent": true,
                        "patchSettings": {
                            "patchMode": "ImageDefault",
                            "assessmentMode": "ImageDefault"
                        }
                    },
                    "secrets": [],
                    "allowExtensionOperations": true,
                    "requireGuestProvisionSignal": true
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaces_web2243_name'))]",
                            "properties": {
                                "deleteOption": "Detach"
                            }
                        }
                    ]
                },
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": true
                    }
                }
            }
        },
        {
            "type": "Microsoft.Network/loadBalancers",
            "apiVersion": "2020-11-01",
            "name": "[parameters('loadBalancers_publicLB_name')]",
            "location": "eastus",
            "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_lb_IP_name'))]",
                "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', parameters('loadBalancers_publicLB_name'), 'backendPool')]"
            ],
            "sku": {
                "name": "Standard",
                "tier": "Regional"
            },
            "properties": {
                "frontendIPConfigurations": [
                    {
                        "name": "frontendIP",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_lb_IP_name'))]"
                            }
                        }
                    }
                ],
                "backendAddressPools": [
                    {
                        "name": "backendPool",
                        "properties": {
                            "loadBalancerBackendAddresses": [
                                {
                                    "name": "Day4-Rg_web2243ipconfig1",
                                    "properties": {}
                                },
                                {
                                    "name": "Day4-Rg_web1860ipconfig1",
                                    "properties": {}
                                }
                            ]
                        }
                    }
                ],
                "loadBalancingRules": [
                    {
                        "name": "lb-rule1",
                        "properties": {
                            "frontendIPConfiguration": {
                                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancers_publicLB_name')), '/frontendIPConfigurations/frontendIP')]"
                            },
                            "frontendPort": 80,
                            "backendPort": 80,
                            "enableFloatingIP": false,
                            "idleTimeoutInMinutes": 4,
                            "protocol": "Tcp",
                            "enableTcpReset": false,
                            "loadDistribution": "Default",
                            "disableOutboundSnat": true,
                            "backendAddressPool": {
                                "id": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', parameters('loadBalancers_publicLB_name'), 'backendPool')]"
                            },
                            "probe": {
                                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancers_publicLB_name')), '/probes/health-probe')]"
                            }
                        }
                    }
                ],
                "probes": [
                    {
                        "name": "health-probe",
                        "properties": {
                            "protocol": "Tcp",
                            "port": 80,
                            "intervalInSeconds": 5,
                            "numberOfProbes": 2
                        }
                    }
                ],
                "inboundNatRules": [],
                "outboundRules": [
                    {
                        "name": "outbound-rule1",
                        "properties": {
                            "allocatedOutboundPorts": 0,
                            "protocol": "All",
                            "enableTcpReset": true,
                            "idleTimeoutInMinutes": 4,
                            "backendAddressPool": {
                                "id": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', parameters('loadBalancers_publicLB_name'), 'backendPool')]"
                            },
                            "frontendIPConfigurations": [
                                {
                                    "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancers_publicLB_name')), '/frontendIPConfigurations/frontendIP')]"
                                }
                            ]
                        }
                    }
                ],
                "inboundNatPools": []
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
            "apiVersion": "2020-11-01",
            "name": "[concat(parameters('virtualNetworks_vNet1_elk_name'), '/elk-web')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_vNet1_elk_name'))]",
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_Day4_Rg_vnet_name'))]"
            ],
            "properties": {
                "peeringState": "Connected",
                "remoteVirtualNetwork": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_Day4_Rg_vnet_name'))]"
                },
                "allowVirtualNetworkAccess": true,
                "allowForwardedTraffic": true,
                "allowGatewayTransit": false,
                "useRemoteGateways": false,
                "remoteAddressSpace": {
                    "addressPrefixes": [
                        "10.1.0.0/16"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
            "apiVersion": "2020-11-01",
            "name": "[concat(parameters('virtualNetworks_Day4_Rg_vnet_name'), '/web-elk')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_Day4_Rg_vnet_name'))]",
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_vNet1_elk_name'))]"
            ],
            "properties": {
                "peeringState": "Connected",
                "remoteVirtualNetwork": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_vNet1_elk_name'))]"
                },
                "allowVirtualNetworkAccess": true,
                "allowForwardedTraffic": true,
                "allowGatewayTransit": false,
                "useRemoteGateways": false,
                "remoteAddressSpace": {
                    "addressPrefixes": [
                        "10.3.0.0/16"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2020-11-01",
            "name": "[parameters('networkInterfaces_elk895_name')]",
            "location": "southcentralus",
            "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_elk_ip_name'))]",
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_vNet1_elk_name'), 'default')]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_elk_vNet_nsg_name'))]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAddress": "10.3.0.4",
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_elk_ip_name'))]"
                            },
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_vNet1_elk_name'), 'default')]"
                            },
                            "primary": true,
                            "privateIPAddressVersion": "IPv4"
                        }
                    }
                ],
                "dnsSettings": {
                    "dnsServers": []
                },
                "enableAcceleratedNetworking": false,
                "enableIPForwarding": false,
                "networkSecurityGroup": {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_elk_vNet_nsg_name'))]"
                }
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2020-11-01",
            "name": "[parameters('networkInterfaces_jumpbox_ansible611_name')]",
            "location": "eastus",
            "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_jumpbox_ansible_ip_name'))]",
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_Day4_Rg_vnet_name'), 'default')]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_Day4_nsg_name'))]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAddress": "10.1.0.4",
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_jumpbox_ansible_ip_name'))]"
                            },
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_Day4_Rg_vnet_name'), 'default')]"
                            },
                            "primary": true,
                            "privateIPAddressVersion": "IPv4"
                        }
                    }
                ],
                "dnsSettings": {
                    "dnsServers": []
                },
                "enableAcceleratedNetworking": false,
                "enableIPForwarding": false,
                "networkSecurityGroup": {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_Day4_nsg_name'))]"
                }
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2020-11-01",
            "name": "[parameters('networkInterfaces_web1860_name')]",
            "location": "eastus",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_Day4_Rg_vnet_name'), 'default')]",
                "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', parameters('loadBalancers_publicLB_name'), 'backendPool')]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_Day4_nsg_name'))]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAddress": "10.1.0.5",
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_Day4_Rg_vnet_name'), 'default')]"
                            },
                            "primary": true,
                            "privateIPAddressVersion": "IPv4",
                            "loadBalancerBackendAddressPools": [
                                {
                                    "id": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', parameters('loadBalancers_publicLB_name'), 'backendPool')]"
                                }
                            ]
                        }
                    }
                ],
                "dnsSettings": {
                    "dnsServers": []
                },
                "enableAcceleratedNetworking": false,
                "enableIPForwarding": false,
                "networkSecurityGroup": {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_Day4_nsg_name'))]"
                }
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2020-11-01",
            "name": "[parameters('networkInterfaces_web2243_name')]",
            "location": "eastus",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_Day4_Rg_vnet_name'), 'default')]",
                "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', parameters('loadBalancers_publicLB_name'), 'backendPool')]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_Day4_nsg_name'))]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAddress": "10.1.0.6",
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_Day4_Rg_vnet_name'), 'default')]"
                            },
                            "primary": true,
                            "privateIPAddressVersion": "IPv4",
                            "loadBalancerBackendAddressPools": [
                                {
                                    "id": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', parameters('loadBalancers_publicLB_name'), 'backendPool')]"
                                }
                            ]
                        }
                    }
                ],
                "dnsSettings": {
                    "dnsServers": []
                },
                "enableAcceleratedNetworking": false,
                "enableIPForwarding": false,
                "networkSecurityGroup": {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_Day4_nsg_name'))]"
                }
            }
        }
    ]
}